SOLUTION ==>

------------Approach 1: Brute Force (O(nÂ²))----------------

class Solution {
public:
    int countPairs(vector<int>& nums, int target) {
        int count = 0;
        int n = nums.size();

        for(int i = 0; i < n-1; i++){
            for(int j = i+1; j < n; j++){
                if(nums[i] + nums[j] < target){
                    count++;
                }
            }
        }
        return count;
    }
};


--------------Approach 2: two-pointer method (O(n log n))---------------------

class Solution {
public:
    int countPairs(vector<int>& nums, int target) {
        int count = 0;
        sort(nums.begin(), nums.end());

        int start = 0;
        int end = nums.size() - 1;

        while(start < end){
            if(nums[start] + nums[end] < target){
                count += (end - start);
                start++;
            }
            else{
                end--;
            }
        }
        return count;
    }
};
